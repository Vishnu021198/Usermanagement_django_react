{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\nair6\\\\Documents\\\\Brototype\\\\WEEK 20 - REACT\\\\user_managemnet\\\\frontend\\\\src\\\\Components\\\\PrivateRoute.js\",\n  _s = $RefreshSig$();\nimport React, { useEffect, useState } from 'react';\nimport { Navigate } from 'react-router-dom';\nimport isAuthUser from '../utils/isAuthUser';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction PrivateRoute({\n  children\n}) {\n  _s();\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\n  const [isLoading, setLoading] = useState(true);\n  useEffect(() => {\n    const fetchData = async () => {\n      const authInfo = await isAuthUser();\n      setIsAuthenticated(authInfo.isAuthenticated);\n      setLoading(false);\n    };\n    fetchData();\n  }, []);\n  if (isLoading) {\n    // Handle loading state, you might show a loading spinner\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 12\n    }, this);\n  }\n  if (!isAuthenticated) {\n    // If not authenticated, redirect to login page with the return URL\n    return /*#__PURE__*/_jsxDEV(Navigate, {\n      to: \"/login\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 12\n    }, this);\n  }\n\n  // If authenticated, render the child components\n  return children;\n}\n_s(PrivateRoute, \"Vxo9BwMGFrO81b/+PeHrnyclP8c=\");\n_c = PrivateRoute;\nexport default PrivateRoute;\nvar _c;\n$RefreshReg$(_c, \"PrivateRoute\");","map":{"version":3,"names":["React","useEffect","useState","Navigate","isAuthUser","jsxDEV","_jsxDEV","PrivateRoute","children","_s","isAuthenticated","setIsAuthenticated","isLoading","setLoading","fetchData","authInfo","fileName","_jsxFileName","lineNumber","columnNumber","to","_c","$RefreshReg$"],"sources":["C:/Users/nair6/Documents/Brototype/WEEK 20 - REACT/user_managemnet/frontend/src/Components/PrivateRoute.js"],"sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Navigate } from 'react-router-dom';\r\nimport isAuthUser from '../utils/isAuthUser';\r\n\r\n\r\nfunction PrivateRoute({ children }) {\r\n  \r\n  const [isAuthenticated, setIsAuthenticated] = useState(false);\r\n  const [isLoading, setLoading] = useState(true);\r\n\r\n  useEffect(() => {\r\n    const fetchData = async () => {\r\n      const authInfo = await isAuthUser();\r\n      setIsAuthenticated(authInfo.isAuthenticated);\r\n      setLoading(false);\r\n    };\r\n\r\n    fetchData();\r\n  }, []);\r\n\r\n  if (isLoading) {\r\n    // Handle loading state, you might show a loading spinner\r\n    return <div>Loading...</div>;\r\n  }\r\n\r\n  if (!isAuthenticated) {\r\n    // If not authenticated, redirect to login page with the return URL\r\n    return <Navigate to=\"/login\" />;\r\n  }\r\n\r\n  // If authenticated, render the child components\r\n  return children;\r\n}\r\n\r\n\r\nexport default PrivateRoute;"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,SAAS,EAAEC,QAAQ,QAAQ,OAAO;AAClD,SAASC,QAAQ,QAAQ,kBAAkB;AAC3C,OAAOC,UAAU,MAAM,qBAAqB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,YAAYA,CAAC;EAAEC;AAAS,CAAC,EAAE;EAAAC,EAAA;EAElC,MAAM,CAACC,eAAe,EAAEC,kBAAkB,CAAC,GAAGT,QAAQ,CAAC,KAAK,CAAC;EAC7D,MAAM,CAACU,SAAS,EAAEC,UAAU,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE9CD,SAAS,CAAC,MAAM;IACd,MAAMa,SAAS,GAAG,MAAAA,CAAA,KAAY;MAC5B,MAAMC,QAAQ,GAAG,MAAMX,UAAU,CAAC,CAAC;MACnCO,kBAAkB,CAACI,QAAQ,CAACL,eAAe,CAAC;MAC5CG,UAAU,CAAC,KAAK,CAAC;IACnB,CAAC;IAEDC,SAAS,CAAC,CAAC;EACb,CAAC,EAAE,EAAE,CAAC;EAEN,IAAIF,SAAS,EAAE;IACb;IACA,oBAAON,OAAA;MAAAE,QAAA,EAAK;IAAU;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC;EAC9B;EAEA,IAAI,CAACT,eAAe,EAAE;IACpB;IACA,oBAAOJ,OAAA,CAACH,QAAQ;MAACiB,EAAE,EAAC;IAAQ;MAAAJ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE,CAAC;EACjC;;EAEA;EACA,OAAOX,QAAQ;AACjB;AAACC,EAAA,CA3BQF,YAAY;AAAAc,EAAA,GAAZd,YAAY;AA8BrB,eAAeA,YAAY;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}